syntax = "proto3";

import "scanner/metadata.proto";
package scanner.proto;

service Master {
  // Called after a new worker spawns to register with the master
  rpc RegisterWorker (WorkerInfo) returns (Registration) {}
  // Ingest videos into the system
  rpc IngestVideos (IngestParameters) returns (IngestResult) {}
  rpc NextWork (NodeInfo) returns (NewWork) {}
  rpc NewJob (JobParameters) returns (Result) {}
  rpc Ping (Empty) returns (Empty) {}
  rpc LoadOp (OpInfo) returns (Result) {}
  rpc GetOpOutputInfo (OpOutputInfoArgs) returns (OpOutputInfo) {}
}

service Worker {
  rpc NewJob (JobParameters) returns (Result) {}
  rpc LoadOp (OpInfo) returns (Empty) {}
}

message Empty {}

message Result {
  bool success = 1;
  string msg = 2;
}

message WorkerInfo {
  string address = 1;
}

message Registration {
  int32 node_id = 1;
}

message OpInfo {
  string so_path = 1;
}

message IngestParameters {
  repeated string table_names = 1;
  repeated string video_paths = 2;
}

message IngestResult {
  Result result = 1;
  repeated string failed_paths = 2;
  repeated string failed_messages = 3;
}

message NodeInfo {
  int32 node_id = 1;
}

message JobParameters {
  string job_name = 1;
  TaskSet task_set = 2;
  MemoryPoolConfig memory_pool_config = 3;
  int32 pipeline_instances_per_node = 4;
  int32 io_item_size = 5;
  int32 work_item_size = 6;
  int32 local_id = 7;
  int32 local_total = 8;
}

message NewWork {
  IOItem io_item = 1;
  LoadWorkEntry load_work = 2;
};

message OpOutputInfoArgs {
  string op_name = 1;
}

message OpOutputInfo {
  Result result = 1;
  repeated string output_columns = 2;
}

